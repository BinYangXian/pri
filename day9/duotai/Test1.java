package day9.duotai;

public class Test1 {
	/**
	 * 1、什么是多态?
现实中多态：多态在现实里面也是经常出现的，如下多态的例子：
  a）上学的时候，儿子找老爸买【手机】来【玩】，老爸承诺过年给你买手机（没说具体的品牌），等到过年的时候，你收到iphone或是红米手机，你都得要，但是如果最开始说给你买苹果，那么收到其他手机，你就不会接受

-- >需求：儿子玩手机（iphone，红米...）

  b）儿子找老爸买【枪】来【玩】，老爸给儿子小明承诺要买枪，用来玩，没有说明具体的什么枪，到时候老爸买枪把枪给儿子的可选择性很大，水枪，火药枪，气枪，仿真枪，真枪。。都可以
-- >需求：儿子玩枪（水枪，火药枪，气枪，仿真枪，真枪）
2、JAVA多态：【对象引用】在运行的时候根据【对象的类型】执行【成员方法】。
，父类型引用可以指向多种子类型【对象】可以执行出多种的状态。

	 */
	public static void main(String[] args) {
		/**
		 * 3、JAVA发生多态的条件-语法
作用--》超类型的引用（指向指向各子类型的对象-调用子类型对象重写的方法）
原因--》编译看引用类型，运行看对象类型

a）超类型（父类，父接口，实现接口）的引用    指向    子类型的对象
b）子类型重写超类型方法
c）超类型（父类，父接口，实现接口）的引用调用了子类型重写的（方法）
执行的方法看对象
		 */
		dome1();
	}
	/**
	 *   a）上学的时候，儿子找老爸买【手机】来【玩】，老爸承诺过年给你买手机（没说具体的品牌），
	 *   等到过年的时候，你收到iphone或是红米手机，你都得要，但是如果最开始说给你买苹果，
	 *   那么收到其他手机，你就不会接受
-- >需求：儿子玩手机（iphone，红米...）
	 */
	private static void dome1() {
		//需要买的手机(可以装iphone和红米)
		Phone  buyPhone;
		
		/**
		 * 具体买-赌钱了-输了-买红米
		 */
		//a）超类型（父类，父接口，实现接口）的引用    指向    子类型的对象
		buyPhone=new RedPhone();
		//儿子玩(红米)
		//c）超类型（父类，父接口，实现接口）的引用调用了子类型重写的（方法）
		//执行的方法看对象
		buyPhone.playGame();
		
		/**
		 * 具体买-赌钱了-赢了-买iphone
		 */
		//a）超类型（父类，父接口，实现接口）的引用    指向    子类型的对象
		buyPhone=new Iphone();
		//儿子玩(iphone)
		//c）超类型（父类，父接口，实现接口）的引用调用了子类型重写的（方法）
		//执行的方法看对象
		buyPhone.playGame();
	}
}
/**
 * 定义手机的超类型
 * phone -所有的具体手机继承phone
 * 统一规范-玩游戏 playGame
 */
class Phone{
	//玩游戏
	public void playGame(){
		System.out.println("手机可以玩游戏，不知道体验如何！（打酱油的代码）");
	}
}


class Iphone  extends Phone{
	
	//b）子类型重写超类型方法
	//玩游戏
	@Override
	public void playGame(){
		System.out.println("体验比较好，如丝般顺滑1");
		System.out.println("体验比较好，如丝般顺滑2");
	}
}

class RedPhone extends Phone{
	//b）子类型重写超类型方法
	//玩游戏
	@Override
	public void playGame(){
		System.out.println("体验比较一般，如便秘一样卡1");
		System.out.println("体验比较一般，如便秘一样卡2");
	}
}